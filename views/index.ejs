<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Quantia</title>


    <!-- Chart component -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    
    <style>
         


        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #1a1a2e 0%, #16213e 100%);
            color: #fff;
            min-height: 100vh;
        }

        .header {
            background: rgba(255, 255, 255, 0.05);
            backdrop-filter: blur(10px);
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
            padding: 15px 0;
            position: sticky;
            top: 0;
            z-index: 100;
        }

        .nav-container {
            max-width: 1200px;
            margin: 0 auto;
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0 20px;
        }

        .logo {
            font-size: 28px;
            font-weight: bold;
            background: linear-gradient(45deg, #00d4ff, #4a90e2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .search-container {
            flex: 1;
            min-width: 500px;
            margin: 0 10px;
            position: relative;
        }

        .search-box {
            width: 100%;
            padding: 12px 20px 12px 45px;
            border: none;
            border-radius: 25px;
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            color: #fff;
            font-size: 16px;
            transition: all 0.3s ease;
        }

        .search-box:focus {
            outline: none;
            background: rgba(255, 255, 255, 0.15);
            box-shadow: 0 0 20px rgba(0, 212, 255, 0.3);
        }

        .search-box::placeholder {
            color: rgba(255, 255, 255, 0.6);
        }

        .search-icon {
            position: absolute;
            right: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: rgba(255, 255, 255, 0.6);
        }

        .search-results {
            position: absolute;
            top: 100%;
            left: 0;
            right: 0;
            background: #1a1a2e;
            border: 1px solid #636e72;
            border-radius: 10px;
            box-shadow: 0 4px 20px rgba(0,0,0,0.4);
            max-height: 300px;
            overflow-y: auto;
            z-index: 1001;
            display: none;
        }

        .search-result-item {
            padding: 12px 15px;
            cursor: pointer;
            border-bottom: 1px solid #636e72;
            transition: background 0.2s ease;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .search-result-item:hover {
            background: #636e72;
        }

        .search-result-item:last-child {
            border-bottom: none;
        }

        .search-result-item .stock-symbol {
            font-weight: 600;
            text-align: left;
            color: #00d4ff;
        }

        .search-result-item .stock-name {
            font-size: 12px;
            text-align: left;
            color: #b2bec3;
            margin-top: 2px;
        }

         .search-result-item .stock-type {
            text-align: right;
        }

        .search-result-item .stock-exchange {
            background-color: #00d4ff;
            color: #1a1a2e;
            display: inline;
            float: right;
            padding: 3px;
            border-radius: 4px;
            font-size: 14px;
        }

        .login-btn {
            padding: 10px 25px;
            background: linear-gradient(45deg, #00d4ff, #4a90e2);
            border: none;
            border-radius: 20px;
            color: white;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 14px;
            text-decoration: none;
        }

        .login-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0, 212, 255, 0.3);
        }

        .main-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 30px 20px;
        }

        .hero-section {
            text-align: center;
            margin-bottom: 50px;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
        }

        .hero-title {
            font-size: 48px;
            font-weight: bold;
            margin-bottom: 15px;
            background: linear-gradient(45deg, #00d4ff, #4a90e2, #ff6b6b);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .hero-subtitle {
            font-size: 18px;
            color: rgba(255, 255, 255, 0.7);
            margin-bottom: 30px;
        }

        .market-overview {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 40px;
        }

        .market-card {
            background: rgba(255, 255, 255, 0.05);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 15px;
            padding: 25px;
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .market-card:hover {
            transform: translateY(-5px);
            background: rgba(255, 255, 255, 0.08);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.2);
        }

        .market-card h3 {
            font-size: 16px;
            color: rgba(255, 255, 255, 0.8);
            margin-bottom: 10px;
        }

        .market-price {
            font-size: 28px;
            font-weight: bold;
            margin-bottom: 8px;
        }

        .market-change {
            font-size: 14px;
            font-weight: 600;
        }

        .positive {
            color: #00ff88;
        }

        .negative {
            color: #ff4757;
        }

        .trending-section {
            margin-bottom: 40px;
        }

        .section-title {
            font-size: 24px;
            font-weight: bold;
            margin-bottom: 20px;
            color: #fff;
        }

        .minichart-container {
            width: 100%;
            max-width: none; /* better than 100% */
            margin: 0;
            padding: 0;
        }

        .chart-container {
            width: 100% !important;
            height: auto !important;
            min-height: 300px;
            position: relative;
            overflow: hidden;
        }
        
        .trending-card {
            background: rgba(255, 255, 255, 0.05);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 15px;
            padding: 20px;
            transition: all 0.3s ease;
        }

        .trending-card:hover {
            transform: translateY(-3px);
            background: rgba(255, 255, 255, 0.08);
        }

        .asset-info {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }

        .asset-name {
            font-weight: 600;
            font-size: 16px;
        }

        .asset-symbol {
            color: rgba(255, 255, 255, 0.6);
            font-size: 12px;
        }

        
                .header {
                    width: 100%;
            background: rgba(255, 255, 255, 0.05);
            backdrop-filter: blur(10px);
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
            padding: 15px 0;
            position: sticky;
            top: 0;
            z-index: 100;
            display: flex;
            justify-content: center;
        }

        .nav-container {
            max-width: 1200px;
            width: 100%;
        } 

        .logo {
            font-size: 28px;
            font-weight: bold;
            background: linear-gradient(45deg, #00d4ff, #4a90e2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

         .nav-menu {
            display: flex;
            gap: 30px;
            list-style: none;
        }

        .nav-menu a {
            color: rgba(255, 255, 255, 0.7);
            text-decoration: none;
            font-weight: 500;
            transition: all 0.3s ease;
            position: relative;
        }

        .nav-menu a.active,
        .nav-menu a:hover {
            color: #00d4ff;
        }

        .user-profile {
            display: flex;
            align-items: center;
            gap: 10px;
            background: rgba(255, 255, 255, 0.1);
            padding: 8px 15px;
            border-radius: 20px;
            backdrop-filter: blur(10px);
        }

        .user-profile:hover{
            cursor: pointer;
        }

        .user-avatar {
            width: 32px;
            height: 32px;
            background: linear-gradient(45deg, #00d4ff, #4a90e2);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            font-size: 14px;
        } 
        .news-section {
            margin-bottom: 40px;
        }

        .news-controls {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 25px;
            flex-wrap: wrap;
            gap: 20px;
        }

        .news-filters {
            display: flex;
            align-items: center;
            gap: 20px;
            flex-wrap: wrap;
        }

        .filter-group {
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .filter-group label {
            font-size: 12px;
            color: rgba(255, 255, 255, 0.8);
            font-weight: 600;
            white-space: nowrap;
        }

        .news-select {
            padding: 8px 12px;
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 12px;
            color: #fff;
            font-size: 12px;
            cursor: pointer;
            transition: all 0.3s ease;
            outline: none;
            min-width: 100px;
        }

        .news-select:hover {
            background: rgba(255, 255, 255, 0.15);
            border-color: rgba(0, 212, 255, 0.5);
        }

        .news-select:focus {
            background: rgba(255, 255, 255, 0.15);
            border-color: #00d4ff;
            box-shadow: 0 0 10px rgba(0, 212, 255, 0.3);
        }

        .news-select option {
            background: #1a1a2e;
            color: #fff;
            padding: 8px;
        }

        .news-refresh-btn {
            padding: 10px 20px;
            background: linear-gradient(45deg, #00d4ff, #4a90e2);
            border: none;
            border-radius: 20px;
            color: white;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 14px;
        }

        .news-refresh-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0, 212, 255, 0.3);
        }

        .news-status {
            color: rgba(255, 255, 255, 0.7);
            font-size: 14px;
        }

        .news-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
            gap: 20px;
        }

        .news-card {
            background: rgba(255, 255, 255, 0.05);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 15px;
            padding: 0;
            transition: all 0.3s ease;
            cursor: pointer;
            overflow: hidden;
            position: relative;
        }

        .news-card:hover {
            transform: translateY(-5px);
            background: rgba(255, 255, 255, 0.08);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.3);
        }

        .news-thumbnail {
            width: 100%;
            height: 180px;
            object-fit: cover;
            background: linear-gradient(45deg, rgba(0, 212, 255, 0.1), rgba(74, 144, 226, 0.1));
        }

        .news-content {
            padding: 20px;
        }

  
        .news-title {
            font-size: 16px;
            font-weight: 600;
            line-height: 1.4;
            margin-bottom: 12px;
            color: #fff;
            display: -webkit-box;
            -webkit-line-clamp: 3;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }

        .news-meta {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 10px;
            flex-wrap: wrap;
            gap: 10px;
        }

        .news-publisher {
            color: #00d4ff;
            font-size: 12px;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .news-date {
            color: rgba(255, 255, 255, 0.5);
            font-size: 12px;
        }

        .news-category {
            position: absolute;
            top: 15px;
            right: 15px;
            background: rgba(0, 212, 255, 0.8);
            color: white;
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 10px;
            font-weight: 600;
            text-transform: uppercase;
        }

        .news-loading {
            text-align: center;
            padding: 40px;
            color: rgba(255, 255, 255, 0.6);
        }

        .news-error {
            text-align: center;
            padding: 40px;
            color: #ff4757;
            background: rgba(255, 71, 87, 0.1);
            border-radius: 15px;
            border: 1px solid rgba(255, 71, 87, 0.2);
        }

        .categories {
            display: flex;
            gap: 15px;
            margin-bottom: 30px;
            flex-wrap: wrap;
        }

        .category-btn {
            padding: 10px 20px;
            background: rgba(255, 255, 255, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 20px;
            color: rgba(255, 255, 255, 0.8);
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 14px;
        }

        .category-btn:hover,
        .category-btn.active {
            background: linear-gradient(45deg, #00d4ff, #4a90e2);
            color: white;
            border-color: transparent;
        }

        .floating-elements {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: -1;
        }

        .floating-circle {
            position: absolute;
            border-radius: 50%;
            background: linear-gradient(45deg, rgba(0, 212, 255, 0.1), rgba(74, 144, 226, 0.1));
            animation: float 20s infinite linear;
        }

        .circle1 {
            width: 100px;
            height: 100px;
            top: 10%;
            left: 10%;
            animation-delay: 0s;
        }

        .circle2 {
            width: 150px;
            height: 150px;
            top: 60%;
            right: 10%;
            animation-delay: -10s;
        }

        .circle3 {
            width: 80px;
            height: 80px;
            bottom: 20%;
            left: 20%;
            animation-delay: -5s;
        }

        @keyframes float {
            0% {
                transform: translateY(0px) rotate(0deg);
            }
            50% {
                transform: translateY(-20px) rotate(180deg);
            }
            100% {
                transform: translateY(0px) rotate(360deg);
            }
        }

        @media (max-width: 768px) {
            .nav-container {
                flex-direction: column;
                gap: 20px;
            }

            .search-container {
                max-width: 100%;
                margin: 0;
            }

            .hero-title {
                font-size: 36px;
            }

            .market-overview {
                grid-template-columns: 1fr;
            }

            .news-filters {
                flex-direction: column;
                align-items: stretch;
                gap: 15px;
            }

            .filter-group {
                flex-direction: column;
                align-items: stretch;
                gap: 5px;
            }

            .news-select {
                min-width: auto;
                width: 100%;
            }
        }
    </style>

    <style>
    /* Estilos para el menú desplegable - agregar a tu archivo CSS existente */
    .user-profile {
        position: relative;
    }

    .dropdown-menu {
        position: absolute;
        top: 100%;
        right: 0;
        margin-top: 8px;
        background: white;
        border-radius: 12px;
        box-shadow: 0 10px 40px rgba(0, 0, 0, 0.15);
        min-width: 220px;
        opacity: 0;
        visibility: hidden;
        transform: translateY(-10px);
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        z-index: 1000;
        overflow: hidden;
    }

    .dropdown-menu.show {
        opacity: 1;
        visibility: visible;
        transform: translateY(0);
    }

    .dropdown-menu::before {
        content: '';
        position: absolute;
        top: -8px;
        right: 20px;
        width: 16px;
        height: 16px;
        background: white;
        transform: rotate(45deg);
        box-shadow: -2px -2px 5px rgba(0, 0, 0, 0.1);
    }

    .menu-header {
        padding: 20px;
        background: linear-gradient(45deg, #00d4ff, #4a90e2);
        color: white;
        text-align: center;
    }

    .menu-header .avatar {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        background: rgba(255, 255, 255, 0.2);
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 24px;
        font-weight: bold;
        margin: 0 auto 10px;
    }

    .menu-header h3 {
        margin: 0;
        font-size: 18px;
    }

    .menu-header p {
        margin: 5px 0 0;
        opacity: 0.8;
        font-size: 14px;
    }

    .menu-items {
        padding: 8px 0;
    }

    .menu-item {
        display: flex;
        align-items: center;
        gap: 12px;
        padding: 12px 20px;
        color: #333;
        text-decoration: none;
        transition: all 0.2s ease;
        cursor: pointer;
    }

    .menu-item:hover {
        background: #f8f9fa;
        color: #667eea;
    }

    .menu-item.logout {
        color: #dc3545;
    }

    .menu-item.logout:hover {
        background: #f8f9fa;
    }

    .menu-item span {
        width: 20px;
        font-size: 16px;
    }

    .menu-divider {
        height: 1px;
        background: #e9ecef;
        margin: 8px 0;
    }

    .market-trends-and-recommendations {
        display: grid;
        grid-template-columns: 2fr 1fr; /* Tendencias más ancho que recomendaciones */
        gap: 30px;
        margin-bottom: 40px;
    }
    
    .recommendations-section {
        background: rgba(255, 255, 255, 0.05);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 15px;
        padding: 20px;
    }
    
    .f {
        list-style: none;
        padding: 0;
        margin: 0;
    }
    
    .recommendation-item {
        padding: 10px;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        font-size: 16px;
        cursor: pointer;
        transition: background 0.2s;
    }
    
    .recommendation-item:hover {
        background: rgba(255, 255, 255, 0.1);
    }
    
</style>

    <link rel="stylesheet" href="/styles/chart.css">
</head>
<body>
    <div class="floating-elements">
        <div class="floating-circle circle1"></div>
        <div class="floating-circle circle2"></div>
        <div class="floating-circle circle3"></div>
    </div>

    <!-- <header class="header">
        <div class="nav-container">
            <div class="logo"><a href="/">Quantia</a></div>
            
            
            <a class="login-btn" href="/market">Mercado</a>
            <a class="login-btn" href="/balance">Cuenta</a>
            <a class="login-btn" href="/port-selector">Portafolio</a>
            <a class="login-btn" href="/login">Iniciar Sesión</a>
        </div>
    </header> -->

    <header class="header">
        <div class="nav-container">
            <div class="logo"><a href="/">Quantia</a></div>
            <nav>
                <ul class="nav-menu">
                    <li><a href="/market">Market</a></li>
                    <li><a href="/balance">Balance</a></li>
                    <li><a href="/port-selector">Portfolios</a></li>
                    <li><a href="/analyse">Analysis</a></li>
                </ul>
            </nav>
            <div class="div">
                <% if (!user) { %>
        <!-- Mostrar botón de login si NO hay usuario -->
                    <a class="login-btn" href="/login">Login</a>
                <% } else { %>
        <!-- Mostrar información del usuario si está logueado -->
                <div class="user-profile" onclick="toggleUserMenu(event)">
    <div class="user-avatar" id="userAvatar">
        <%= user.username ? user.username.substring(0, 2).toUpperCase() : 'US' %>
    </div>
    <span id="usernameDisplay"><%= user.username || 'Usuario' %></span>
    
    <!-- Menú desplegable -->
    <div class="dropdown-menu" id="userDropdown">
        <div class="menu-header">
            <div class="avatar"><%= user.username ? user.username.substring(0, 2).toUpperCase() : 'US' %></div>
            <h3><%= user.username || 'Usuario' %></h3>
            <p><%= user.email || 'usuario@email.com' %></p>
        </div>
        
        <div class="menu-items">
            <div class="menu-item" onclick="handleMenuClick('profile')">
                <span>👤</span>
                Profile
            </div>
            
            <div class="menu-item" onclick="handleMenuClick('settings')">
                <span>⚙️</span>
                Config
            </div>
            
            <div class="menu-item" onclick="handleMenuClick('help')">
                <span>❓</span>
                Help
            </div>
            
            <div class="menu-divider"></div>
            
            <div class="menu-item logout" onclick="handleMenuClick('logout')">
                <span>🚪</span>
                Log out
            </div>
        </div>
    </div>
</div>
                <% } %>
            </div>

            </div>
            
        </div>
    </header>

    <main class="main-container">
        <section class="hero-section">
            <h1 class="hero-title">Intelligent Financial Analysis</h1>
            <p class="hero-subtitle">Explore markets, analyze trends, and make informed decisions</p>
            <div class="search-container">
                <input type="text" class="search-box" placeholder="Searching assets..." id="searchInput">
                <div class="search-icon">🔍</div>
                <div class="search-results" id="searchResults"></div>
            </div>
        </section>

        <!-- <div class="categories">
            <button class="category-btn active" onclick="filterAssets('all')">Todos</button>
            <button class="category-btn" onclick="filterAssets('stocks')">Acciones</button>
            <button class="category-btn" onclick="filterAssets('crypto')">Criptomonedas</button>
            <button class="category-btn" onclick="filterAssets('etf')">ETFs</button>
            <button class="category-btn" onclick="filterAssets('forex')">Divisas</button>
        </div> -->
        <section class="market-overview">
            <div class="market-card" onclick="openAsset('AAPL')">
                <h3>Apple Inc.</h3>
                <div class="market-price">$175.23</div>
                <div class="market-change positive">+2.45 (+1.42%)</div>
            </div>
            
            <div class="market-card" onclick="openAsset('Alphabet')">
                <h3>Alphabet Inc.</h3>
                <div class="market-price">$2,847.91</div>
                <div class="market-change negative">-15.67 (-0.55%)</div>
            </div>
            
            <div class="market-card" onclick="openAsset('BTC')">
                <h3>Bitcoin</h3>
                <div class="market-price">$43,256.78</div>
                <div class="market-change positive">+1,234.56 (+2.94%)</div>
            </div>
            
            <div class="market-card" onclick="openAsset('SPY')">
                <h3>SPDR S&P 500 ETF</h3>
                <div class="market-price">$478.92</div>
                <div class="market-change positive">+3.21 (+0.67%)</div>
            </div>
        </section>
<!-- 
        
        <section class="trending-section">
            <h2 class="section-title">Market Trends</h2>
            <div class="trending-grid" id="trending-grid">
                <div class="minichart-container">
                    <div class="minichart-header" >
                        <div class="stock-info">
                            <span class="stock-symbol" id="stockSymbol">IBM</span>
                            <span class="stock-interval" id="stockInterval">5m</span>
                        </div>
                        <div class="price-info">
                            <div class="stock-price" id="currentPrice">-</div>
                            <div class="stock-change" id="priceChange">-</div>
                        </div>
                    </div>
                    <div class="chart-container" id="chartContainer">
                        <div class="loading">Loading initial data...</div>
                    </div>
                    <div class="minichart-footer">
                        Last update: <span id="lastUpdate">-</span>
                        <div class="refresh-info"> Next update in <span id="countdown">60</span> seconds</div>
                    </div>

                </div>
            </div>
        </section> -->

        <div class="market-trends-and-recommendations">           
            <section class="trending-section">
                <h2 class="section-title">Today Price</h2>
                <div class="minichart-container">
                    <div class="minichart-header">
                        <div class="stock-info">
                            <span class="stock-symbol" id="stockSymbol">IBM</span>
                            <span class="stock-interval" id="stockInterval">5m</span>
                        </div>
                        <div class="price-info">
                            <div class="stock-price" id="currentPrice">-</div>
                            <div class="stock-change" id="priceChange">-</div>
                        </div>
                    </div>
                    <div class="chart-container" id="chartContainer">
                        <div class="loading">Loading...</div>
                    </div>
                    <div class="minichart-footer">
                        Last update: <span id="lastUpdate">-</span>
                        <div class="refresh-info">Next update in <span id="countdown">60</span> segundos</div>
                    </div>
                </div>
            </section> 
        
            <section class="recommendations-section">
                <h2 class="section-title">Top 10 Recommendations</h2>
                <div class="recommendations-list" id="recommendationsList">
                    <p style="color: rgba(255,255,255,0.6)">Loading recommendations...</p>
                </div>
            </section>
        </div>

        <section class="news-section">
            <h2 class="section-title">Financial News</h2>
            <div class="news-controls">
                <div class="news-filters">
                    <div class="filter-group">
                        <label for="categorySelect">📂 Category:</label>
                        <select id="categorySelect" class="news-select" onchange="handleFilterChange()">
                            <option value="general">General</option>
                            <option value="markets">Market</option>
                            <option value="economy">Economy</option>
                            <option value="business">Business</option>
                            <option value="crypto">Cryptos</option>
                            <option value="stocks">Stocks</option>
                            <option value="forex">Foreign exchange</option>
                        </select>
                    </div>
                    
                    <div class="filter-group">
                        <label for="countSelect">🔢 Quantity:</label>
                        <select id="countSelect" class="news-select" onchange="handleFilterChange()">
                            <option value="5">5 news</option>
                            <option value="10" selected>10 news</option>
                            <option value="15">15 news</option>
                            <option value="20">20 news</option>
                            <option value="25">25 news</option>
                        </select>
                    </div>
                    
                    <div class="filter-group">
                        <label for="regionSelect">🌍 Region:</label>
                        <select id="regionSelect" class="news-select" onchange="handleFilterChange()">
                            <option value="USA" selected>USA</option>
                            <option value="EUROPE">EUROPE</option>
                            <option value="ASIA">ASIA</option>
                            <option value="LATAM">LATAM</option>
                            <option value="GLOBAL">GLOBAL</option>
                        </select>
                    </div>
                    
                    <button class="news-refresh-btn" onclick="refreshNews()">🔄 Refresh</button>
                </div>
                
                <div class="news-status" id="newsStatus">Loading news...</div>
            </div>
            <div class="news-grid" id="newsContainer">
                <!-- Las noticias se cargarán aquí dinámicamente -->
            </div>
        </section>
    </main>
    <script src="/scripts/minichart.js"></script>
    <script>
        function displayModal(){
            
        }

        // Funcionalidad de búsqueda
        let searchTimeout;

        setupEventListeners()

        // Añadir eventos al los elementos
        function setupEventListeners() {
            // Buscador
            const searchInput = document.getElementById('searchInput');
            //Resultados
            const searchResults = document.getElementById('searchResults');
            
            searchInput.addEventListener('input', handleSearch);
            searchInput.addEventListener('focus', () => {
            if (searchInput.value.trim()) handleSearch();
            });
            
            // Cerrar resultados al hacer click fuera
            document.addEventListener('click', (e) => {
            if (!e.target.closest('.search-container')) {
                searchResults.style.display = 'none';
            }
            });
        }

    
        async function handleSearch() {
            const query = document.getElementById('searchInput').value.toLowerCase().trim();
            const searchResults = document.getElementById('searchResults');
            
            if (query.length === 0) {
                searchResults.style.display = 'none';
                return;
            }

            try {
                const stocks = await getStockSymbols(query);
                
                if (stocks.length > 0) {
                    let html = '';
                    stocks.forEach(stock => {
                        html += `
                        <div class="search-result-item" onclick="selectResult('${stock.symbol}')">
                        <div>
                            <div class="stock-symbol">${stock.symbol}</div>
                            <div class="stock-name">${stock.name}</div>
                        </div>
                        <div>
                            <div class="stock-type">${stock.type}</div>
                            <div class="stock-exchange">${stock.exchange}</div>
                        </div>
                        </div>
                        `;
                    });
                    searchResults.innerHTML = html;
                    searchResults.style.display = 'block';
                } else {
                    searchResults.innerHTML = '<div class="search-result-item">No se encontraron resultados</div>';
                    searchResults.style.display = 'block';
                }
            } catch (error) {
                searchResults.innerHTML = `<div class="search-result-item">Error: ${error.message}</div>`;
                searchResults.style.display = 'block';
            }
        }

        async function getStockSymbols(searchTerm = '') {
            // Verificar si el término de búsqueda está vacío
            if (!searchTerm.trim()) {
                return [];
            }
            
            const url = `/api/search/${searchTerm}`;
            
            try {
                const response = await fetch(url);
                console.log(response);
                
                if (!response.ok) {
                    throw new Error(`Error HTTP: ${response.status}`);
                }
                
                const data = await response.json();
                
                if (data.status === 'error') {
                    throw new Error(data.message);
                }

                console.log(data);

                return data.results 
            } catch (error) {
                console.error("Error getting data:", error);
                throw error; // Re-lanzar el error para manejarlo en el llamador
            }
        }

        async function selectResult(symbol) {
            // Redirige a indice4.html con el símbolo en el query param
            window.location.href = `/analyse/historic?symbol=${encodeURIComponent(symbol)}`;
        }

        // Funcionalidad de noticias
        async function loadNews(count = 10, category = 'general', region = 'USA', symbol = '') {
            const newsContainer = document.getElementById('newsContainer');
            const newsStatus = document.getElementById('newsStatus');
            
            try {
                newsStatus.textContent = 'Loading news...';
                newsContainer.innerHTML = '<div class="news-loading">⏳ Loading financial news...</div>';
                

                let url;
                const baseUrl = window.location.origin; // O tu URL base específica

                if(symbol === ''){
                    url = new URL('/api/news', baseUrl);
                    url.searchParams.append('count', count);
                    url.searchParams.append('category', category);
                    url.searchParams.append('region', region);
                }else{
                    url = new URL(`/api/news/${symbol}`, baseUrl);
                }
                
                
                const response = await fetch(url);
                const data = await response.json();
                
                await new Promise(resolve => setTimeout(resolve, 800)); // Simular delay de red
                
                displayNews(data.news);
                newsStatus.textContent = `${data.count} loaded news • ${data.region}`;
                
            } catch (error) {
                console.error('Error loading news:', error);
                newsContainer.innerHTML = '<div class="news-error">❌ Error loading news. Please try again.</div>';
                newsStatus.textContent = 'Error loading news';
            }
        }

        // Función para manejar cambios en los filtros
        function handleFilterChange() {
            const category = document.getElementById('categorySelect').value;
            const count = parseInt(document.getElementById('countSelect').value);
            const region = document.getElementById('regionSelect').value;
            
            loadNews(count, category, region);
        }

        // Función para el botón de actualizar
        function refreshNews() {
            const category = document.getElementById('categorySelect').value;
            const count = parseInt(document.getElementById('countSelect').value);
            const region = document.getElementById('regionSelect').value;
            
            loadNews(count, category, region);
        }

        // Función para obtener el texto legible de la región
        function getRegionDisplayName(regionCode) {
            const regionNames = {
                'USA': 'USA',
                'EUROPE': 'Europe',
                'ASIA': 'Asia',
                'LATAM': 'LATAM',
                'GLOBAL': 'Global'
            };
            return regionNames[regionCode] || regionCode;
        }

        // Función para obtener el texto legible de la categoría
        function getCategoryDisplayName(categoryCode) {
            const categoryNames = {
                'general': 'General',
                'markets': 'Markets',
                'economy': 'Economy',
                'business': 'Bussines',
                'crypto': 'Criptocurrency',
                'stocks': 'Stocks',
                'forex': 'Currency Exchanges'
            };
            return categoryNames[categoryCode] || categoryCode;
        }

        function displayNews(newsArray) {
            const newsContainer = document.getElementById('newsContainer');
            
            if (!newsArray || newsArray.length === 0) {
                newsContainer.innerHTML = '<div class="news-error">📰 There is no news available at this time.</div>';
                return;
            }

            const newsHtml = newsArray.map((article, index) => {
                const formattedDate = formatNewsDate(article.date);
                const thumbnailUrl = article.thumbnail || 'https://transformad.com/wp-content/uploads/2024/05/GRIS-GRAFITO-S277.png';
                
                return `
                    <div class="news-card" onclick="openNewsArticle('${article.link}')" style="animation-delay: ${index * 0.1}s">
                        <div class="news-category">${article.category}</div>
                        <img src="${thumbnailUrl}" alt="${article.title}" class="news-thumbnail" 
                             onerror="this.src='https://transformad.com/wp-content/uploads/2024/05/GRIS-GRAFITO-S277.png'">
                        <div class="news-content">
                            <div class="news-meta">
                                <div class="news-publisher">${article.publisher}</div>
                                <div class="news-date">${formattedDate}</div>
                            </div>
                            <h3 class="news-title">${article.title}</h3>
                        </div>
                    </div>
                `;
            }).join('');

            newsContainer.innerHTML = newsHtml;
            
            // Animar las tarjetas cuando aparecen
            setTimeout(() => {
                document.querySelectorAll('.news-card').forEach((card, index) => {
                    card.style.opacity = '0';
                    card.style.transform = 'translateY(30px)';
                    
                    setTimeout(() => {
                        card.style.transition = 'all 0.6s ease';
                        card.style.opacity = '1';
                        card.style.transform = 'translateY(0)';
                    }, index * 100);
                });
            }, 50);
        }

        function formatNewsDate(dateString) {
            try {
                // Las fechas tienen un formato extraño con "+057598-", vamos a extraer la parte válida
                const cleanDate = dateString.replace(/^\+\d+-/, '');
                const date = new Date(cleanDate);
                
                if (isNaN(date.getTime())) {
                    return 'Unavailable date';
                }
                
                const now = new Date();
                const diffTime = Math.abs(now - date);
                const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));
                
                if (diffDays === 0) {
                    return 'Today';
                } else if (diffDays === 1) {
                    return 'Yesterday';
                } else if (diffDays < 7) {
                    return `${diffDays} days ago`;
                } else {
                    return date.toLocaleDateString('es-ES', {
                        day: 'numeric',
                        month: 'short',
                        year: 'numeric'
                    });
                }
            } catch (error) {
                return 'Unavailable date';
            }
        }

        function openNewsArticle(link) {
            if (link && link !== '') {
                window.open(link, '_blank', 'noopener,noreferrer');
            }
        }

        // Funcionalidad de inicio de sesión
        function handleLogin() {
            const isLoggedIn = Math.random() > 0.5; // Simulación
            
            if (isLoggedIn) {
                alert('Welcome back! Successful log in.');
                document.querySelector('.login-btn').textContent = 'My account';
            } else {
                // En una implementación real, abriría un modal de login
                const modal = createLoginModal();
                document.body.appendChild(modal);
            }
        }

        function createLoginModal() {
            const modal = document.createElement('div');
            modal.style.cssText = `
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background: rgba(0, 0, 0, 0.8);
                display: flex;
                justify-content: center;
                align-items: center;
                z-index: 1000;
            `;

            modal.innerHTML = `
                <div style="background: #1a1a2e; padding: 40px; border-radius: 20px; max-width: 400px; width: 90%;">
                    <h2 style="margin-bottom: 20px; text-align: center;">Iniciar Sesión</h2>
                    <input type="email" placeholder="Correo electrónico" style="width: 100%; padding: 12px; margin-bottom: 15px; border: none; border-radius: 8px; background: rgba(255,255,255,0.1); color: white;">
                    <input type="password" placeholder="Contraseña" style="width: 100%; padding: 12px; margin-bottom: 20px; border: none; border-radius: 8px; background: rgba(255,255,255,0.1); color: white;">
                    <button onclick="this.parentElement.parentElement.remove()" style="width: 100%; padding: 12px; background: linear-gradient(45deg, #00d4ff, #4a90e2); border: none; border-radius: 8px; color: white; font-weight: bold; cursor: pointer;">Iniciar Sesión</button>
                    <button onclick="this.parentElement.parentElement.remove()" style="position: absolute; top: 15px; right: 20px; background: none; border: none; color: white; font-size: 24px; cursor: pointer;">×</button>
                </div>
            `;

            return modal;
        }

        // Funcionalidad de filtros
        function filterAssets(category) {
            // Actualizar botones activos
            document.querySelectorAll('.category-btn').forEach(btn => {
                btn.classList.remove('active');
            });
            event.target.classList.add('active');

            console.log(`Filtering by category: ${category}`);
            // Aquí implementarías la lógica de filtrado real
        }

        // Funcionalidad para abrir detalles de activo
        function openAsset(symbol) {
            console.log(`Abriendo detalles para: ${symbol}`);
            // alert(`Próximamente: Vista detallada de ${symbol} con gráficos, análisis técnico y noticias.`);
        }

        // Animaciones y efectos adicionales
        document.addEventListener('DOMContentLoaded', function() {
            // Animación de entrada para las tarjetas
            const cards = document.querySelectorAll('.market-card, .trending-card');
            cards.forEach((card, index) => {
                card.style.opacity = '0';
                card.style.transform = 'translateY(20px)';
                
                setTimeout(() => {
                    card.style.transition = 'all 0.6s ease';
                    card.style.opacity = '1';
                    card.style.transform = 'translateY(0)';
                }, index * 100);
            });

            // Cargar noticias al inicio con valores por defecto
            loadNews(10, 'general', 'USA');

            // Actualización de precios simulada
            setInterval(updatePrices, 3000);
        });

        function updatePrices() {
            const priceElements = document.querySelectorAll('.market-price');
            priceElements.forEach(element => {
                const currentPrice = parseFloat(element.textContent.replace('$', '').replace(',', ''));
                const change = (Math.random() - 0.5) * 10;
                const newPrice = Math.max(0, currentPrice + change);
                element.textContent = `$${newPrice.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`;
                
                // Efecto de flash en el precio
                element.style.background = change > 0 ? 'rgba(0, 255, 136, 0.2)' : 'rgba(255, 71, 87, 0.2)';
                setTimeout(() => {
                    element.style.background = 'transparent';
                }, 500);
            });
        }

        // Efectos de hover mejorados
        document.querySelectorAll('.market-card, .trending-card').forEach(card => {
            card.addEventListener('mouseenter', function() {
                this.style.transform = 'translateY(-8px) scale(1.02)';
            });
            
            card.addEventListener('mouseleave', function() {
                this.style.transform = 'translateY(0) scale(1)';
            });
        });
    </script>

    <script>
        function toggleUserMenu(event) {
    event.stopPropagation();
    const dropdown = document.getElementById('userDropdown');
    const isVisible = dropdown.classList.contains('show');
    
    if (isVisible) {
        hideUserMenu();
    } else {
        showUserMenu();
    }
}

function showUserMenu() {
    const dropdown = document.getElementById('userDropdown');
    dropdown.classList.add('show');
}

function hideUserMenu() {
    const dropdown = document.getElementById('userDropdown');
    dropdown.classList.remove('show');
}

function handleMenuClick(action) {
    hideUserMenu();
    
    switch(action) {
        case 'profile':
            // Redirigir a la página de perfil
            window.location.href = '/profile';
            break;
        case 'settings':
            // Redirigir a configuración
            window.location.href = '/settings';
            break;
        case 'help':
            // Redirigir a ayuda
            window.location.href = '/help';
            break;
        case 'logout':
            if(confirm('Are you sure you want to log out?')) {
                // Hacer logout
                window.location.href = '/logout';
            }
            break;
    }
}

// Cerrar menú al hacer clic fuera de él
document.addEventListener('click', function(event) {
    const userProfile = event.target.closest('.user-profile');
    const dropdown = document.getElementById('userDropdown');
    
    if (!userProfile && dropdown && dropdown.classList.contains('show')) {
        hideUserMenu();
    }
});
    </script>

    <script>
        async function loadRecommendations() {
            const list = document.getElementById("recommendationsList");
            list.innerHTML = "<li class='recommendation-item'>⏳ Cargando recomendaciones...</li>";
        
            try {
                const response = await fetch("http://localhost:5006/recommendations");

                if (!response.ok) {
                    throw new Error("Error HTTP " + response.status);
                }
        
                const data = await response.json();
        
                if (!data.top_10_recommendations || data.top_10_recommendations.length === 0) {
                    list.innerHTML = "<li class='recommendation-item'>❌ No hay recomendaciones disponibles</li>";
                    return;
                }
        
                // Pintar las recomendaciones
                list.innerHTML = data.top_10_recommendations.map(rec => `
                    <li class="recommendation-item" onclick="openAsset('${rec.ticker}')">
                        <strong>${rec.ticker}</strong> - ${rec.name}
                        <span style="float:right; color:#00d4ff">
                            ${Math.round(rec.avg_allocation * 100)}%
                        </span>
                    </li>
                `).join("");
        
                // Agregar info de performance
                if (data.profit) {
                    const rlAgent = Number(data.profit.rl_agent_final) || 0;
                    const buyHold = Number(data.profit.buy_and_hold_final) || 0;
                    const outperf = Number(data.profit.outperformance) || 0;
                
                    const info = document.createElement("div");
                    info.style.marginTop = "15px";
                    info.style.fontSize = "14px";
                    info.style.color = "rgba(255,255,255,0.7)";
                    info.innerHTML = `
                        <p>🤖 RL Agent: $${rlAgent.toFixed(2)}</p>
                        <p>📈 Buy & Hold: $${buyHold.toFixed(2)}</p>
                        <p style="color:${outperf >= 0 ? '#00ff88':'#ff4757'}">
                            🚀 Outperformance: $${outperf.toFixed(2)}
                        </p>
                        <p style="font-size:12px; opacity:0.8">Last update: ${data.as_of}</p>
                    `;
                    document.querySelector(".recommendations-section").appendChild(info);
                }
        
            } catch (error) {
                console.error("Error cargando recomendaciones:", error);
                list.innerHTML = "<li class='recommendation-item'>❌ Error loading recommendations</li>";
            }
        }
        
        // Ejecutar al cargar la página
        document.addEventListener("DOMContentLoaded", loadRecommendations);
        </script>
        
</body>
</html>